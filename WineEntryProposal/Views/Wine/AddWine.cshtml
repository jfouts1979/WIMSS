@model WineEntryProposal.Models.WineAddViewModel

@* ************************************************************************** *@
@* ************************************************************************** *@
@* *************************  ADD   A   NEW    WINE    ********************** *@
@* ************************************************************************** *@
@* ************************************************************************** *@

@{
    ViewBag.Title = "AddWine";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@* Acronym Added To Spell L.I.N.D.S.A.Y. *@

<h2>WIMS - Libations Inventory - Nickel and Dime System - for Ardent Youth</h2>

<div class="container">
    <div class="panel panel-primary">
        <div class="panel-heading">W.I.M.S. - Add A New Wine To Inventory:</div>
        <div class="panel-body">

            @using (Html.BeginForm("AddWine2", "wine"))
            {
            @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Wine Inventory Management System</h4>

                    <div>
                        Name:
                        @Html.EditorFor(m => m.TheWine.Name,
                        new { htmlAttributes = new { @class = "form-control" } })

                        @*As of MVC 5.1, HTML attributes can be passed to the
                            EditorTemplate using the above syntax*@
                    </div>

                    <div>
                        Bottle Volume (Range:  0.0 to 1000.0):
                        @Html.EditorFor(v => v.TheWine.btlVol,
                        new { htmlAttributes = new { @class = "form-control" } })

                        @*As of MVC 5.1, HTML attributes can be passed to the
            EditorTemplate using the above syntax*@
                    </div>

                    <div>
                        Bottle Volume Unit Of Measure (e.g. ml):
                        @Html.EditorFor(uom => uom.TheWine.btlVolUOM,
                        new { htmlAttributes = new { @class = "form-control" } })

                        @*As of MVC 5.1, HTML attributes can be passed to the
            EditorTemplate using the above syntax*@
                    </div>

                    <div>
                        WineType:
                        @Html.EnumDropDownListFor(x => x.TheWine.WineType, "Enter Wine Type",
                        new { @class = "form-control" })
                    </div>

                    <div>
                        TTBClassType:
                        @Html.EnumDropDownListFor(x => x.TheWineClass, "Enter Wine Type",
                        new { @class = "form-control" })
                    </div>

                    <div>           

                        Varietal:
                        @Html.DropDownListFor(m => m.TheWine.Varietal.VarietalId,
                        Model.VarietalsToChooseFrom.Select(x => new SelectListItem()
                        {
                           Text = x.Name,
                           Value = x.Id.ToString()
                           }), "Select Varietal", new { @class = "form-control" })

                     </div>   

                        @*     new SelectList(Model.VehicleModels.OrderBy(x => x.Name), "Id", "Name"),
                            "-- Select a model --" *@

                        @*   @Html.DropDownListFor(m => m.SelectedVarietalId,
                            Model.VarietalsToChooseFrom.Select(x => new SelectListItem()
                        *@

                        <br />

                        <div>
                            <input type="submit" value="AddWine" class="btn-primary" />
                        
                            @*<input type="submit" value="View Inventory" class="btn-primary" />*@                        
                        </div>


                    </div>
                    }

                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>

                    @section Scripts {
                        @Scripts.Render("~/bundles/jqueryval")
                    }
                </div>
            </div>
        </div>
